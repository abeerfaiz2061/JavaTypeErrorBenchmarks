javac errors for Code1.java 
Code1.java:10: error: method does not override or implement a method from a supertype
    @Override
    ^
Code1.java:17: error: method does not override or implement a method from a supertype
    @Override
    ^
Code1.java:35: error: type argument C is not within bounds of type-variable T
        Code1<C> bec = new Code1<>(new C());
              ^
  where T is a type-variable:
    T extends A declared in class Code1
Code1.java:35: error: cannot infer type arguments for Code1<>
        Code1<C> bec = new Code1<>(new C());
                       ^
  reason: inferred type does not conform to upper bound(s)
    inferred: C
    upper bound(s): A
Code1.java:38: error: type argument B is not within bounds of type-variable T
        Code1<B> beb = new Code1<>(new B());
              ^
  where T is a type-variable:
    T extends A declared in class Code1
Code1.java:38: error: cannot infer type arguments for Code1<>
        Code1<B> beb = new Code1<>(new B());
                       ^
  reason: inferred type does not conform to upper bound(s)
    inferred: B
    upper bound(s): A
6 errors
 
============================================================================= 
ExtendJ errors for Code1.java 
C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java:10: error: method does not override a method from a supertype
C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java:17: error: method does not override a method from a supertype
C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java:35: error: type argument 1 is of type Generics_Extend.C which is not within the bounds of type parameter T (T extends A)
C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java:35: error: cannot instantiate Generics_Extend.Code1 no matching constructor found in Generics_Extend.Code1
C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java:38: error: type argument 1 is of type Generics_Extend.B which is not within the bounds of type parameter T (T extends A)
C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java:38: error: cannot instantiate Generics_Extend.Code1 no matching constructor found in Generics_Extend.Code1
 
============================================================================= 
Eclipse ECJ errors for Code1.java 
----------
1. ERROR in C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java (at line 11)
	public void displayClass() {
	            ^^^^^^^^^^^^^^
The method displayClass() of type B must override or implement a supertype method
----------
2. ERROR in C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java (at line 18)
	public void displayClass() {
	            ^^^^^^^^^^^^^^
The method displayClass() of type C must override or implement a supertype method
----------
3. ERROR in C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java (at line 35)
	Code1<C> bec = new Code1<>(new C());
	      ^
Bound mismatch: The type C is not a valid substitute for the bounded parameter <T extends A> of the type Code1<T>
----------
4. ERROR in C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java (at line 35)
	Code1<C> bec = new Code1<>(new C());
	               ^^^^^^^^^^^^^^^^^^^^
Cannot infer type arguments for Code1<>
----------
5. ERROR in C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java (at line 38)
	Code1<B> beb = new Code1<>(new B());
	      ^
Bound mismatch: The type B is not a valid substitute for the bounded parameter <T extends A> of the type Code1<T>
----------
6. ERROR in C:\Users\Abeer Faiz Farid\Desktop\MSc Software Engineering\Semester 3\CodeRepo\Generics_Extend\Code1.java (at line 38)
	Code1<B> beb = new Code1<>(new B());
	               ^^^^^^^^^^^^^^^^^^^^
Cannot infer type arguments for Code1<>
----------
6 problems (6 errors)
